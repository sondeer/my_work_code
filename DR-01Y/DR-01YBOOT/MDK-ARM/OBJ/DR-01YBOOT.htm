<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJ\DR-01YBOOT.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJ\DR-01YBOOT.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Fri Jun 23 15:44:12 2017
<BR><P>
<H3>Maximum Stack Usage =        296 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; UartDevice::Init(int) &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3f]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[15]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC1_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[12]">DMA1_Channel1_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[13]">DMA1_Channel2_3_IRQHandler</a> from stm32f0xx_it.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[14]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[f]">EXTI0_1_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[10]">EXTI2_3_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[11]">EXTI4_15_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from stm32f0xx_it.o(i.HardFault_Handler) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[1f]">I2C1_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[20]">I2C2_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from stm32f0xx_it.o(i.NMI_Handler) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from stm32f0xx_it.o(i.PendSV_Handler) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[21]">SPI1_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[22]">SPI2_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from stm32f0xx_it.o(i.SVC_Handler) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f070xb.o(.text)
 <LI><a href="#[1b]">TIM14_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[1c]">TIM15_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[1d]">TIM16_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[1e]">TIM17_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[16]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[17]">TIM1_CC_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[18]">TIM3_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[19]">TIM6_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[1a]">TIM7_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[23]">USART1_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[24]">USART2_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[25]">USART3_4_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[26]">USB_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f070xb.o(.text) referenced from startup_stm32f070xb.o(RESET)
 <LI><a href="#[2a]">__main</a> from __main.o(!!!main) referenced from startup_stm32f070xb.o(.text)
 <LI><a href="#[29]">__sti___8_main_cpp_appImg</a> from main.o(i.__sti___8_main_cpp_appImg) referenced from main.o(.init_array)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[8f]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[90]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[34]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[91]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[92]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[93]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[94]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[30]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[95]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[96]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[97]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[98]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[99]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[a0]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[a1]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a2]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[a3]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[a4]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[a5]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[39]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a6]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[a7]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[a8]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[a9]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[aa]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[ab]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[ac]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[ad]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[31]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[33]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[ae]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[35]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; UartDevice::Init(int) &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[af]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[41]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[38]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[b0]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USART3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f070xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f070xb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[b2]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::SetDataBuff(int, unsigned char*, int)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AddSendPacket(unsigned char, unsigned char, unsigned char*, int)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::Update(unsigned char*, int)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::GetSendData(unsigned char*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::GoToApp(unsigned char)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::ReadData(void*, int)
</UL>

<P><STRONG><a name="[b3]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f0xx_hal_dma_c]::DMA_CalcBaseAndBitshift(__DMA_HandleTypeDef*)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[32]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[37]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ba]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[bb]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[bc]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[13]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.DMA1_Channel2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel2_3_IRQHandler &rArr; UartDevice::InttruptCallBack() &rArr; UartDevice::BeginTransmitDMA(unsigned char*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::InttruptCallBack()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32f0xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f0xx_hal_flash_c]::FLASH_SetErrorCode()
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[46]"></a>HAL_DMA_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32f0xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_Init &rArr; [local to stm32f0xx_hal_dma_c]::DMA_CalcBaseAndBitshift(__DMA_HandleTypeDef*)
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f0xx_hal_dma_c]::DMA_CalcBaseAndBitshift(__DMA_HandleTypeDef*)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::Init(int)
</UL>

<P><STRONG><a name="[48]"></a>HAL_DMA_Start</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, stm32f0xx_hal_dma.o(i.HAL_DMA_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_DMA_Start &rArr; [local to stm32f0xx_hal_dma_c]::DMA_SetConfig(__DMA_HandleTypeDef*, unsigned, unsigned, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f0xx_hal_dma_c]::DMA_SetConfig(__DMA_HandleTypeDef*, unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::Init(int)
</UL>

<P><STRONG><a name="[4a]"></a>HAL_FLASHEx_Erase</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, stm32f0xx_hal_flash_ex.o(i.HAL_FLASHEx_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase(unsigned)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f0xx_hal_flash_ex_c]::FLASH_MassErase()
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::EraseFlashPage(unsigned, int)
</UL>

<P><STRONG><a name="[74]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_hal_flash.o(i.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::DisableCtlFlash()
</UL>

<P><STRONG><a name="[4d]"></a>HAL_FLASH_Program</STRONG> (Thumb, 174 bytes, Stack size 64 bytes, stm32f0xx_hal_flash.o(i.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f0xx_hal_flash_c]::FLASH_Program_HalfWord(unsigned, unsigned short)
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::WriteFlash(unsigned, void*, int)
</UL>

<P><STRONG><a name="[71]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::EnableCtlFlash()
</UL>

<P><STRONG><a name="[6b]"></a>HAL_GPIO_Init</STRONG> (Thumb, 470 bytes, Stack size 20 bytes, stm32f0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::Init(int)
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[65]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[50]"></a>HAL_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; [local to stm32f0xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>HAL_InitTick</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32f0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; [local to stm32f0xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[52]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[6c]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::Init(int)
</UL>

<P><STRONG><a name="[56]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32f0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_NVIC_SetPriority &rArr; [local to stm32f0xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f0xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::Init(int)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[58]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 382 bytes, Stack size 16 bytes, stm32f0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[53]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[5a]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f0xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[59]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, stm32f0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[5b]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1356 bytes, Stack size 24 bytes, stm32f0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[68]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[5d]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_hal_cortex.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[55]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; [local to stm32f0xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to stm32f0xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[5c]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f0xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5e]"></a>HAL_UART_Init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32f0xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::Init(int)
</UL>

<P><STRONG><a name="[5f]"></a>HAL_UART_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_hal_uart.o(i.HAL_UART_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[63]"></a>HAL_UART_Transmit</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, stm32f0xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::WriteData(void*, int)
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f070xb.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, stm32f0xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[62]"></a>UART_CheckIdleState</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f0xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[60]"></a>UART_SetConfig</STRONG> (Thumb, 478 bytes, Stack size 32 bytes, stm32f0xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[64]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, stm32f0xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[67]"></a>Error_Handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i._Z13Error_Handlerv))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>

<P><STRONG><a name="[4c]"></a>FLASH_PageErase(unsigned)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f0xx_hal_flash_ex.o(i._Z15FLASH_PageErasej))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[66]"></a>SystemClock_Config()</STRONG> (Thumb, 114 bytes, Stack size 80 bytes, main.o(i._Z18SystemClock_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SystemClock_Config() &rArr; HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler()
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>UartDevice::BeginTransmitDMA(unsigned char*, int)</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, uart.o(i._ZN10UartDevice16BeginTransmitDMAEPhi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UartDevice::BeginTransmitDMA(unsigned char*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::InttruptCallBack()
</UL>

<P><STRONG><a name="[42]"></a>UartDevice::InttruptCallBack()</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, uart.o(i._ZN10UartDevice16InttruptCallBackEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartDevice::InttruptCallBack() &rArr; UartDevice::BeginTransmitDMA(unsigned char*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::BeginTransmitDMA(unsigned char*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
</UL>

<P><STRONG><a name="[6a]"></a>UartDevice::Init(int)</STRONG> (Thumb, 282 bytes, Stack size 176 bytes, uart.o(i._ZN10UartDevice4InitEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = UartDevice::Init(int) &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>UartDevice::ReadData(void*, int)</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, uart.o(i._ZN10UartDevice8ReadDataEPvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UartDevice::ReadData(void*, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>UartDevice::WriteData(void*, int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, uart.o(i._ZN10UartDevice9WriteDataEPvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UartDevice::WriteData(void*, int) &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>UartDevice::UartDevice(int)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i._ZN10UartDeviceC1Ei))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_appImg
</UL>

<P><STRONG><a name="[bf]"></a>UartDevice::UartDevice__sub_object(int)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uart.o(i._ZN10UartDeviceC1Ei), UNUSED)

<P><STRONG><a name="[6f]"></a>FlashWriter::WriteFlash(unsigned, void*, int)</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, flash.o(i._ZN11FlashWriter10WriteFlashEjPvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FlashWriter::WriteFlash(unsigned, void*, int) &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteFirmwareInf(FirmwareInfStruct*)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteBuffFlash(unsigned)
</UL>

<P><STRONG><a name="[70]"></a>FlashWriter::EnableCtlFlash()</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, flash.o(i._ZN11FlashWriter14EnableCtlFlashEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashWriter::EnableCtlFlash()
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteFirmwareInf(FirmwareInfStruct*)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteBuffFlash(unsigned)
</UL>

<P><STRONG><a name="[72]"></a>FlashWriter::EraseFlashPage(unsigned, int)</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, flash.o(i._ZN11FlashWriter14EraseFlashPageEji))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FlashWriter::EraseFlashPage(unsigned, int) &rArr; HAL_FLASHEx_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteFirmwareInf(FirmwareInfStruct*)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteBuffFlash(unsigned)
</UL>

<P><STRONG><a name="[73]"></a>FlashWriter::DisableCtlFlash()</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, flash.o(i._ZN11FlashWriter15DisableCtlFlashEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashWriter::DisableCtlFlash()
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteFirmwareInf(FirmwareInfStruct*)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteBuffFlash(unsigned)
</UL>

<P><STRONG><a name="[77]"></a>FlashWriter::FlashWriter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, flash.o(i._ZN11FlashWriterC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteFirmwareInf(FirmwareInfStruct*)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteBuffFlash(unsigned)
</UL>

<P><STRONG><a name="[c0]"></a>FlashWriter::FlashWriter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flash.o(i._ZN11FlashWriterC1Ev), UNUSED)

<P><STRONG><a name="[84]"></a>AppImage::GetHardVer()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appimage.o(i._ZN8AppImage10GetHardVerEv))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[83]"></a>AppImage::GetSoftVer()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, appimage.o(i._ZN8AppImage10GetSoftVerEv))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[75]"></a>AppImage::SetDataBuff(int, unsigned char*, int)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, appimage.o(i._ZN8AppImage11SetDataBuffEiPhi))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = AppImage::SetDataBuff(int, unsigned char*, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[81]"></a>AppImage::SetWriteAddr(unsigned)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, appimage.o(i._ZN8AppImage12SetWriteAddrEj))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[85]"></a>AppImage::CheckBuffData(unsigned)</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, appimage.o(i._ZN8AppImage13CheckBuffDataEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AppImage::CheckBuffData(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[76]"></a>AppImage::WriteBuffFlash(unsigned)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, appimage.o(i._ZN8AppImage14WriteBuffFlashEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = AppImage::WriteBuffFlash(unsigned) &rArr; FlashWriter::WriteFlash(unsigned, void*, int) &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::FlashWriter()
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::DisableCtlFlash()
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::EraseFlashPage(unsigned, int)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::EnableCtlFlash()
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::WriteFlash(unsigned, void*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[7a]"></a>AppImage::IsAppCheckRight()</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, appimage.o(i._ZN8AppImage15IsAppCheckRightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AppImage::IsAppCheckRight()
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::GoToApp(unsigned char)
</UL>

<P><STRONG><a name="[78]"></a>AppImage::WriteFirmwareInf(FirmwareInfStruct*)</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, appimage.o(i._ZN8AppImage16WriteFirmwareInfEP17FirmwareInfStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = AppImage::WriteFirmwareInf(FirmwareInfStruct*) &rArr; FlashWriter::WriteFlash(unsigned, void*, int) &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::FlashWriter()
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::DisableCtlFlash()
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::EraseFlashPage(unsigned, int)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::EnableCtlFlash()
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriter::WriteFlash(unsigned, void*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[79]"></a>AppImage::GoToApp(unsigned char)</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, appimage.o(i._ZN8AppImage7GoToAppEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AppImage::GoToApp(unsigned char) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::IsAppCheckRight()
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>AppImage::AppImage()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, appimage.o(i._ZN8AppImageC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_appImg
</UL>

<P><STRONG><a name="[c1]"></a>AppImage::AppImage__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, appimage.o(i._ZN8AppImageC1Ev), UNUSED)

<P><STRONG><a name="[7b]"></a>CmdHandle::GetSendData(unsigned char*)</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, cmd.o(i._ZN9CmdHandle11GetSendDataEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CmdHandle::GetSendData(unsigned char*) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>CmdHandle::PacketCheck(BootPacketStruct*, int)</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, cmd.o(i._ZN9CmdHandle11PacketCheckEP16BootPacketStructi))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CmdHandle::PacketCheck(BootPacketStruct*, int) &rArr; CmdHandle::CheckSum(void*, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::CheckSum(void*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::Update(unsigned char*, int)
</UL>

<P><STRONG><a name="[7e]"></a>CmdHandle::AddSendPacket(unsigned char, unsigned char, unsigned char*, int)</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, cmd.o(i._ZN9CmdHandle13AddSendPacketEhhPhi))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CmdHandle::AddSendPacket(unsigned char, unsigned char, unsigned char*, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::CheckSum(void*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisExtPacket(BootPacketStruct*)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[7f]"></a>CmdHandle::AnalysisPacket(BootPacketStruct*)</STRONG> (Thumb, 452 bytes, Stack size 48 bytes, cmd.o(i._ZN9CmdHandle14AnalysisPacketEP16BootPacketStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = CmdHandle::AnalysisPacket(BootPacketStruct*) &rArr; AppImage::WriteFirmwareInf(FirmwareInfStruct*) &rArr; FlashWriter::WriteFlash(unsigned, void*, int) &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteFirmwareInf(FirmwareInfStruct*)
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::IsAppCheckRight()
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::WriteBuffFlash(unsigned)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::CheckBuffData(unsigned)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::SetWriteAddr(unsigned)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::SetDataBuff(int, unsigned char*, int)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::GetSoftVer()
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::GetHardVer()
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::DeleteLeakPacketFlag(int)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisExtPacket(BootPacketStruct*)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AddSendPacket(unsigned char, unsigned char, unsigned char*, int)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::GoToApp(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::Update(unsigned char*, int)
</UL>

<P><STRONG><a name="[86]"></a>CmdHandle::AnalysisExtPacket(BootPacketStruct*)</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, cmd.o(i._ZN9CmdHandle17AnalysisExtPacketEP16BootPacketStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CmdHandle::AnalysisExtPacket(BootPacketStruct*) &rArr; CmdHandle::AddSendPacket(unsigned char, unsigned char, unsigned char*, int) &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::InitLeakPacketFlag(int)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::GetLeakPacketIndex(unsigned char*, int)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AddSendPacket(unsigned char, unsigned char, unsigned char*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[88]"></a>CmdHandle::GetLeakPacketIndex(unsigned char*, int)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, cmd.o(i._ZN9CmdHandle18GetLeakPacketIndexEPhi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CmdHandle::GetLeakPacketIndex(unsigned char*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisExtPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[87]"></a>CmdHandle::InitLeakPacketFlag(int)</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, cmd.o(i._ZN9CmdHandle18InitLeakPacketFlagEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CmdHandle::InitLeakPacketFlag(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisExtPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[82]"></a>CmdHandle::DeleteLeakPacketFlag(int)</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, cmd.o(i._ZN9CmdHandle20DeleteLeakPacketFlagEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CmdHandle::DeleteLeakPacketFlag(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[89]"></a>CmdHandle::Update(unsigned char*, int)</STRONG> (Thumb, 266 bytes, Stack size 48 bytes, cmd.o(i._ZN9CmdHandle6UpdateEPhi))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CmdHandle::Update(unsigned char*, int) &rArr; CmdHandle::AnalysisPacket(BootPacketStruct*) &rArr; AppImage::WriteFirmwareInf(FirmwareInfStruct*) &rArr; FlashWriter::WriteFlash(unsigned, void*, int) &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::PacketCheck(BootPacketStruct*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>CmdHandle::CheckSum(void*, int)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, cmd.o(i._ZN9CmdHandle8CheckSumEPvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdHandle::CheckSum(void*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AddSendPacket(unsigned char, unsigned char, unsigned char*, int)
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::PacketCheck(BootPacketStruct*, int)
</UL>

<P><STRONG><a name="[8c]"></a>CmdHandle::CmdHandle()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cmd.o(i._ZN9CmdHandleC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___8_main_cpp_appImg
</UL>

<P><STRONG><a name="[c2]"></a>CmdHandle::CmdHandle__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cmd.o(i._ZN9CmdHandleC1Ev), UNUSED)

<P><STRONG><a name="[80]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_hal_dma.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::AnalysisPacket(BootPacketStruct*)
</UL>

<P><STRONG><a name="[36]"></a>main</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = main &rArr; UartDevice::Init(int) &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::Update(unsigned char*, int)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::GetSendData(unsigned char*)
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::GoToApp(unsigned char)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::WriteData(void*, int)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::ReadData(void*, int)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::Init(int)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>[local to stm32f0xx_hal_dma_c]::DMA_SetConfig(__DMA_HandleTypeDef*, unsigned, unsigned, unsigned)</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stm32f0xx_hal_dma.o(i._ZN41_INTERNAL_19_stm32f0xx_hal_dma_c_c25f65ec13DMA_SetConfigEP19__DMA_HandleTypeDefjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = [local to stm32f0xx_hal_dma_c]::DMA_SetConfig(__DMA_HandleTypeDef*, unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>

<P><STRONG><a name="[47]"></a>[local to stm32f0xx_hal_dma_c]::DMA_CalcBaseAndBitshift(__DMA_HandleTypeDef*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_hal_dma.o(i._ZN41_INTERNAL_19_stm32f0xx_hal_dma_c_c25f65ec23DMA_CalcBaseAndBitshiftEP19__DMA_HandleTypeDef))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to stm32f0xx_hal_dma_c]::DMA_CalcBaseAndBitshift(__DMA_HandleTypeDef*)
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[4b]"></a>[local to stm32f0xx_hal_flash_ex_c]::FLASH_MassErase()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f0xx_hal_flash_ex.o(i._ZN46_INTERNAL_24_stm32f0xx_hal_flash_ex_c_6648b60e15FLASH_MassEraseEv))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_Erase
</UL>

<P><STRONG><a name="[57]"></a>[local to stm32f0xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32f0xx_hal_cortex.o(i._ZN44_INTERNAL_22_stm32f0xx_hal_cortex_c_910ac08716NVIC_SetPriorityE9IRQn_Typej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to stm32f0xx_hal_cortex_c]::NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[45]"></a>[local to stm32f0xx_hal_flash_c]::FLASH_SetErrorCode()</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f0xx_hal_flash.o(i._ZN43_INTERNAL_21_stm32f0xx_hal_flash_c_48aa8f3e18FLASH_SetErrorCodeEv))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[4f]"></a>[local to stm32f0xx_hal_flash_c]::FLASH_Program_HalfWord(unsigned, unsigned short)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f0xx_hal_flash.o(i._ZN43_INTERNAL_21_stm32f0xx_hal_flash_c_48aa8f3e22FLASH_Program_HalfWordEjt))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[29]"></a>__sti___8_main_cpp_appImg</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.__sti___8_main_cpp_appImg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __sti___8_main_cpp_appImg
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdHandle::CmdHandle()
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppImage::AppImage()
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartDevice::UartDevice(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.init_array)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[40]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
